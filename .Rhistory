iclass<-classify(dat[,1:2], full)
iclass
grp
err<-0
err<-err+as.numeric(iclass==numGrp2[i])
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
err<-err+as.numeric(iclass==numGrp2[i])
err
classify(dat[,c(i,1)], full)
classify(dat[,c(i,1)], full)[1]
iclass<-classify(dat[,c(i,1)], full)[1]
numGrp2[i]
err<-err+as.numeric(iclass==numGrp2[i])
err
err<-0
iclass
numGrp2[i]
iclass==numGrp2[i]
as.numeric(iclass==numGrp2[i])
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
i=1
full<-booster(dat[,-i], grp[-i], 5)
iclass<-classify(dat[,c(i,1)], full)[1]
iclass
err<-err+iclass==numGrp2[i]
err
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-booster(dat[,-i], grp[-i], 5)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+iclass==numGrp2[i]
}
err/length(grp)
ee
err
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-booster(dat[,-i], grp[-i], 5)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
tsp1 <- tspcalc(dat,grp)
###################################################
# tie breaker differs from Tan et al 2005. Unsure why.
ktsp<-function(dat, grp, k=1, weights = rep(1,n)){
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
n<-length(grp)
#add something here to sort columns / labels into blocks
#send into C
pairs <- getData(dat, numGrp,  k, weights)
# r indexing
pairs [,1:2] <-pairs [,1:2]+1
colnames(pairs)= c("1st","2nd","delta", "gamma")
return(list(sample_size=n, n_pairs=k, names_group=namesGrp, labels_group=numGrp2, pairs = pairs))
}
#boosting loop
booster <- function(dat,grp,M=5){
if(M==0){
#put something for non-fixed iterations, stopping conditions
}
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
confuseM<-array(data=0, dim=c(M,2,2))
for(m in 1:M){
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
}
return(list(sample_size=n, n_pairs=M, names_group=namesGrp, labels_group=numGrp2, pairs = pairs))
}
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 5)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
##################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 1)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
##################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 3)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
##################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-bagger[,-i], grp[-i], 19)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-bagger[,-i], grp[-i], 19)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-bagger([,-i], grp[-i], 19)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-bagger([,-i], grp[-i], 19)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-bagger(dat[,-i], grp[-i], 19)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
tsp2
tsp3
cl3<-classify(dat,tsp3)
table(tsp3$labels_group ,cl3)
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-booster(dat[,-i], grp[-i], 9)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
tsp3<-booster(dat, grp ,7)
cl3<-classify(dat,tsp3)
table(tsp3$labels_group ,cl3)
tsp3<-booster(dat, grp ,9)
table(tsp3$labels_group ,cl3)
cl3<-classify(dat,tsp3)
table(tsp3$labels_group ,cl3)
tsp3<-booster(dat, grp ,7)
cl3<-classify(dat,tsp3)
table(tsp3$labels_group ,cl3)
tsp3<-booster(dat, grp ,5)
cl3<-classify(dat,tsp3)
table(tsp3$labels_group ,cl3)
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-booster(dat[,-i], grp[-i], 7)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
tsp3
##################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 3)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
##################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 7)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 11)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 9)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
##################################################
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 5)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
#################################################
tsp1
tsp2
tsp3
booster <- function(dat,grp,M=5){
if(M==0){
#put something for non-fixed iterations, stopping conditions
}
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
for(m in 1:M){
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
tab <- table(numGrp2,classify(dat,list(sample_size=n, n_pairs=m, names_group=namesGrp, labels_group=numGrp2, pairs = pairs[1:m,]))
errs[m]<-(tab[2,1] + tab[1,2])/sum(tab)
}
return(list(sample_size=n, n_pairs=M, names_group=namesGrp, labels_group=numGrp2, pairs = pairs, err =errs))
}
#boosting loop
booster <- function(dat,grp,M=5){
if(M==0){
#put something for non-fixed iterations, stopping conditions
}
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
for(m in 1:M){
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
tab <- table(numGrp2,classify(dat,list(sample_size=n, n_pairs=m, names_group=namesGrp, labels_group=numGrp2, pairs = pairs[1:m,])))
errs[[m]]<-(tab[2,1] + tab[1,2])/sum(tab)
}
return(list(sample_size=n, n_pairs=M, names_group=namesGrp, labels_group=numGrp2, pairs = pairs, err =errs))
}
tsp3<-booster(dat, grp , 100)
booster <- function(dat,grp,M=5){
if(M==0){
#put something for non-fixed iterations, stopping conditions
}
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
for(m in 1:M){
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
temp_clasif = list(sample_size=n, n_pairs=m, names_group=namesGrp, labels_group=numGrp2, pairs = pairs[1:m,])
tab <- table(numGrp2,classify(dat,temp_clasif))
errs[[m]]<-(tab[2,1] + tab[1,2])/sum(tab)
}
return(list(sample_size=n, n_pairs=M, names_group=namesGrp, labels_group=numGrp2, pairs = pairs, err =errs))
}
tsp3<-booster(dat, grp , 100)
m=1
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
M=10
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
temp_clasif = list(sample_size=n, n_pairs=m, names_group=namesGrp, labels_group=numGrp2, pairs = pairs[1:m,])
tab <- table(numGrp2,classify(dat,temp_clasif))
classify(dat,temp_clasif)
temp_clasif
tsp3
tsp_classif<-temp_classif
tsp_classif<-temp_clasif
N<-dim(dat)[2]
vote_dir <- 2*((tsp_classif$pairs[,3]>0) - 0.5)
tsp_classif$pairs
tsp_classif$pairs[,3]
tsp_classif$pairs[3]
pairs[1:m,]
pairs[1:2,]
as.matrix(pairs[1:m,])
as.matrix(pairs[1:2,])
#boosting loop
booster <- function(dat,grp,M=5){
if(M==0){
#put something for non-fixed iterations, stopping conditions
}
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
for(m in 1:M){
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
if(m>1){
temp_clasif = list(sample_size=n, n_pairs=m, names_group=namesGrp, labels_group=numGrp2, pairs = pairs[1:m,])
tab <- table(numGrp2,classify(dat,temp_clasif))
errs[[m]]<-(tab[2,1] + tab[1,2])/sum(tab)
}else{
errs[[1]] =0
}
}
return(list(sample_size=n, n_pairs=M, names_group=namesGrp, labels_group=numGrp2, pairs = pairs, err =errs))
}
tsp3<-booster(dat, grp , 3)
tsp3$err
#boosting loop
booster <- function(dat,grp,M=5){
if(M==0){
#put something for non-fixed iterations, stopping conditions
}
#convert to numbers, keep labels for later
numGrp <- as.numeric(factor(grp))
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
namesGrp <- levels(factor(grp))
#initialize
n<-length(grp)
pairs<-array(0, c(M,4))
weight=rep(1/n,n)
weightM<-matrix(data=0,nrow=M,ncol=n)
errM<-matrix(data=0,nrow=M,ncol=1)
alphaM<-matrix(data=0,nrow=M,ncol=1)
classesM<-matrix(data=0,nrow=M,ncol=n)
pairM<-list()
errs<-list()
confuseM<-array(data=0, dim=c(M,2,2))
for(m in 1:M){
weightM[m,] <- weight
pairM[[m]] <- ktsp( dat,numGrp, 1, weight)
classesM[m,] <- classify(dat, pairM[[m]])
confuseM[m,,]<-table(numGrp2 ,classesM[m,])
errM[m] <- (confuseM[m,2,1]+confuseM[m,1,2] ) /sum(confuseM[m,,])
alphaM[m] <- alphacalc(errM[m])
weight <- newweight(weight, alphaM[m], classesM[m,], numGrp2)
pairs[m,] <- pairM[[m]]$pairs[1,]
if(m>1){
temp_clasif = list(sample_size=n, n_pairs=m, names_group=namesGrp, labels_group=numGrp2, pairs = pairs[1:m,])
tab <- table(numGrp2,classify(dat,temp_clasif))
errs[[m]]<-(tab[2,1] + tab[1,2])/sum(tab)
}else{
errs[1] =0
}
}
return(list(sample_size=n, n_pairs=M, names_group=namesGrp, labels_group=numGrp2, pairs = pairs, err =errs))
}
tsp3<-booster(dat, grp , 100)
tsp3$err
unlist(tsp3$err)
plot(1:100,unlist(tsp3$err))
plot(1:100,unlist(tsp3$err), type='l')
tsp3<-booster(dat, grp , 50)
#LOOCV
err<-0
numGrp2 <- 2*(as.numeric(factor(grp))-1.5)
for(i in 1:length(grp)){
full<-ktsp(dat[,-i], grp[-i], 50)
iclass<-classify(dat[,c(i,1)], full)[1]
err<-err+as.numeric(iclass==numGrp2[i])
}
err/length(grp)
tsp3
tsp3$pairs
